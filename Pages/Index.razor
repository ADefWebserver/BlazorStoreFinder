@page "/"
@using NetTopologySuite.Geometries
@using Syncfusion.Blazor.Layouts
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.SplitButtons
@using Darnton.Blazor.DeviceInterop.Geolocation;
@inject IGeolocationService GeolocationService
<h4>Blazor Store Finder</h4>

<SfDashboardLayout Columns="4" AllowResizing="true">
    <DashboardLayoutPanels>
        <DashboardLayoutPanel Id="Search" Row="0" Column="0" SizeX=1 SizeY=3>
            <HeaderTemplate>Search</HeaderTemplate>
            <ContentTemplate>
                <div class="row" style="margin-left:2px;">
                    <div class="col-xs-9 col-sm-9 col-lg-9 col-md-9" style="margin-top:10px;">
                        <SfTextBox Placeholder="Location" @bind-Value="CurrentLocation"></SfTextBox>
                    </div>
                    <div class="col-xs-3 col-sm-3 col-lg-3 col-md-3">
                        <button class="e-control e-btn e-lib" style="width:auto; margin-top:8px;">
                            <span class="oi oi-magnifying-glass"></span>
                        </button>
                    </div>
                </div>
            </ContentTemplate>
        </DashboardLayoutPanel>
        <DashboardLayoutPanel Id="Map" Row="0" Column="1" SizeX=3 SizeY=3>
            <HeaderTemplate>Map</HeaderTemplate>
        </DashboardLayoutPanel>
    </DashboardLayoutPanels>
</SfDashboardLayout>

@code {
    protected GeolocationResult? CurrentPositionResult { get; set; }
    Coordinate CurrentCoordinate = new Coordinate();
    string CurrentLocation = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Get current location
            // will cause a popup to show to ask permission
            CurrentPositionResult = await GeolocationService.GetCurrentPosition();

            if (CurrentPositionResult.IsSuccess)
            {
                // Get latitude and longitude
                string? CurrentLatitude =
                CurrentPositionResult.Position?.Coords?.Latitude.ToString("F2");

                string? CurrentLongitude =
                CurrentPositionResult.Position?.Coords?.Longitude.ToString("F2");

                // Set latitude and longitude
                // (to be consumed by GetTile() method)
                if (CurrentLatitude != null && CurrentLongitude != null)
                {
                    CurrentCoordinate.X = Convert.ToDouble(CurrentLatitude);
                    CurrentCoordinate.Y = Convert.ToDouble(CurrentLongitude);

                    // Reverse Geocode coordinate and set location
                    CurrentLocation = $"{CurrentCoordinate.X} {CurrentCoordinate.Y}";
                }

                StateHasChanged();
            }
        }
    }

}
